generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Database {
  id            Int          @id @default(autoincrement())
  name          String
  dbms          String
  host          String
  port          Int?
  databaseName  String
  username      String
  password      String
  tables        Table[]
  createdAt     DateTime     @default(now())
}

model Project {
  id          Int          @id @default(autoincrement())
  name        String
  tables      ProjectTable[]
  relations   Relation[]
  createdAt   DateTime     @default(now())
}

model Table {
  id          Int          @id @default(autoincrement())
  databaseId  Int
  database    Database     @relation(fields: [databaseId], references: [id])
  name        String
  columns     Column[]
  projects    ProjectTable[]
  sourceRelations Relation[] @relation("source")
  targetRelations Relation[] @relation("target")
  createdAt   DateTime     @default(now())
}

model ProjectTable {
  projectId   Int
  tableId     Int
  project     Project      @relation(fields: [projectId], references: [id], onDelete: Cascade)
  table       Table        @relation(fields: [tableId], references: [id], onDelete: Cascade)
  positionX   Float?
  positionY   Float?
  @@id([projectId, tableId])
}

model Column {
  id          Int          @id @default(autoincrement())
  tableId     Int
  table       Table        @relation(fields: [tableId], references: [id], onDelete: Cascade)
  name        String
  type        String
  constraints String[]
  comment     String?
  sourceRelations Relation[] @relation("sourceColumn")
  targetRelations Relation[] @relation("targetColumn")
}

model Relation {
  id             Int          @id @default(autoincrement())
  projectId      Int
  project        Project      @relation(fields: [projectId], references: [id], onDelete: Cascade)
  sourceTableId  Int
  sourceTable    Table        @relation("source", fields: [sourceTableId], references: [id], onDelete: Cascade)
  sourceColumnId Int
  sourceColumn   Column       @relation("sourceColumn", fields: [sourceColumnId], references: [id], onDelete: Cascade)
  targetTableId  Int
  targetTable    Table        @relation("target", fields: [targetTableId], references: [id], onDelete: Cascade)
  targetColumnId Int
  targetColumn   Column       @relation("targetColumn", fields: [targetColumnId], references: [id], onDelete: Cascade)
  type           String
}
